<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on smyachenkov</title>
    <link>http://smyachenkov.com/tags/programming/</link>
    <description>Recent content in programming on smyachenkov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jan 2020 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="http://smyachenkov.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flyway Migrations in Multi-Module Maven Projects</title>
      <link>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</guid>
      <description>Flyway is a database migration management tool, which allows you to deliver and validate changes of the database. It&amp;rsquo;s a powerful tool with a lot of useful features, but my favorite use-case is an ability to use Flyway migrations as part of an application. You can execute migrations when application starts, having your DB updated and application deployed in one seamless process. Also, it stimulates you to store migrations code very close to code of your application — in the same project.</description>
    </item>
    
    <item>
      <title>Kotlin Static Analysis Tools</title>
      <link>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</guid>
      <description>Kotlin did an amazing job saving and including into its scope most of all valuable Java libraries, frameworks, and tools. But there is one type of tool that can&amp;rsquo;t be easily imported and reused — static code analyzers. Java developers have implemented a lot of tools for code analysis, therefore, if you have worked with Java you might be familiar with some of the following projects: PMD, checkstyle, findbugs, spotbugs, etc.</description>
    </item>
    
  </channel>
</rss>