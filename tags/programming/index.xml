<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Stanislav Myachenkov</title>
    <link>http://smyachenkov.com/tags/programming/</link>
    <description>Recent content in programming on Stanislav Myachenkov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="http://smyachenkov.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode challenge experience</title>
      <link>http://smyachenkov.com/posts/leetcode-experience/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/leetcode-experience/</guid>
      <description>I have a confession. I suck at algorithms. I failed so many interviews where i was asked to revert linked list on a piece of paper. I&amp;rsquo;ve been working from home since March because of COVID-19 quarantine and i&amp;rsquo;ve decided - it&amp;rsquo;s finaly time to face the problems.
Difference between team-oriented and algorithm-oriented code Low readability. There are almost no separation of functionality, everything in a single method.
Variable naming.</description>
    </item>
    
    <item>
      <title>How To Compare JSON Documents In Java</title>
      <link>http://smyachenkov.com/posts/json-difference-in-java/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/json-difference-in-java/</guid>
      <description>Sometimes we want to know the difference between 2 or more JSON documents. We may want to do it to display the history of edits of the document to review, validate, and have a chance to roll back these changes.
For example, if we have two documents describing the movie Titanic:
{ &amp;#34;name&amp;#34;: &amp;#34;Titanic&amp;#34;, &amp;#34;length&amp;#34;: 195, &amp;#34;genres&amp;#34;: [&amp;#34;romance&amp;#34;], &amp;#34;cast&amp;#34;: { &amp;#34;Jack&amp;#34;: &amp;#34;James Cameron&amp;#34; } } and
{ &amp;#34;name&amp;#34;: &amp;#34;Titanic&amp;#34;, &amp;#34;genres&amp;#34;: [&amp;#34;romance&amp;#34;, &amp;#34;drama&amp;#34;], &amp;#34;cast&amp;#34;: { &amp;#34;Jack&amp;#34;: &amp;#34;Leonardo DiCaprio&amp;#34;, &amp;#34;Rose&amp;#34;: &amp;#34;Kate Winslet&amp;#34; } } How can we find the difference between those two?</description>
    </item>
    
    <item>
      <title>Cognitive Biases In Software Development</title>
      <link>http://smyachenkov.com/posts/cognitive-biases-software-development/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/cognitive-biases-software-development/</guid>
      <description>A couple of years ago, I started my first job as a programmer. On the first day, I entered the office, sat in my new chair, turned on the computer, checked out a project from the version control system and opened it in IDE. The first-ever piece of the code I saw looked like that:
// TODO it works, but it&amp;#39;s ugly, rewrite function init() { // some code }  As you may already have guessed, this code remained untouched for a couple of years, until the project became obsolete and was archived and longer used.</description>
    </item>
    
    <item>
      <title>Flyway Migrations in Multi-Module Maven Projects</title>
      <link>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</guid>
      <description>Flyway is a database migration management tool, which allows you to deliver and validate changes of the database. It&amp;rsquo;s a powerful tool with a lot of useful features, but my favorite use-case is an ability to use Flyway migrations as part of an application. You can execute migrations when application starts, having your DB updated and application deployed in one seamless process. Also, it stimulates you to store migrations code very close to code of your application — in the same project.</description>
    </item>
    
    <item>
      <title>Kotlin Static Analysis Tools</title>
      <link>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</guid>
      <description>Kotlin did an amazing job saving and including into its scope most of all valuable Java libraries, frameworks, and tools. But there is one type of tool that can&amp;rsquo;t be easily imported and reused — static code analyzers. Java developers have implemented a lot of tools for code analysis, therefore, if you have worked with Java you might be familiar with some of the following projects: PMD, checkstyle, findbugs, spotbugs, etc.</description>
    </item>
    
  </channel>
</rss>