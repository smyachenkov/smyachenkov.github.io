<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Stanislav Myachenkov</title>
    <link>http://smyachenkov.com/posts/</link>
    <description>Recent content in Posts on Stanislav Myachenkov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jun 2020 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="http://smyachenkov.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Compare JSON Documents In Java</title>
      <link>http://smyachenkov.com/posts/json-difference-in-java/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/json-difference-in-java/</guid>
      <description>Sometimes we want to know the difference between 2 or more JSON documents. We may want to do it to display the history of edits of the document to review, validate, and have a chance to roll back these changes.
For example, if we have two documents describing the movie Titanic:
{ &amp;#34;name&amp;#34;: &amp;#34;Titanic&amp;#34;, &amp;#34;length&amp;#34;: 195, &amp;#34;genres&amp;#34;: [&amp;#34;romance&amp;#34;], &amp;#34;cast&amp;#34;: { &amp;#34;Jack&amp;#34;: &amp;#34;James Cameron&amp;#34; } } and
{ &amp;#34;name&amp;#34;: &amp;#34;Titanic&amp;#34;, &amp;#34;genres&amp;#34;: [&amp;#34;romance&amp;#34;, &amp;#34;drama&amp;#34;], &amp;#34;cast&amp;#34;: { &amp;#34;Jack&amp;#34;: &amp;#34;Leonardo DiCaprio&amp;#34;, &amp;#34;Rose&amp;#34;: &amp;#34;Kate Winslet&amp;#34; } } How can we find the difference between those two?</description>
    </item>
    
    <item>
      <title>Cognitive Biases In Software Development</title>
      <link>http://smyachenkov.com/posts/cognitive-biases-software-development/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/cognitive-biases-software-development/</guid>
      <description>A couple of years ago, I started my first job as a programmer. On the first day, I entered the office, sat in my new chair, turned on the computer, checked out a project from the version control system and opened it in IDE. The first-ever piece of the code I saw looked like that:
// TODO it works, but it&amp;#39;s ugly, rewrite function init() { // some code }  As you may already have guessed, this code remained untouched for a couple of years, until the project became obsolete and was archived and longer used.</description>
    </item>
    
    <item>
      <title>Flyway Migrations in Multi-Module Maven Projects</title>
      <link>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/flyway-migrations-in-multi-module-maven-projects/</guid>
      <description>Flyway is a database migration management tool, which allows you to deliver and validate changes of the database. It&amp;rsquo;s a powerful tool with a lot of useful features, but my favorite use-case is an ability to use Flyway migrations as part of an application. You can execute migrations when application starts, having your DB updated and application deployed in one seamless process. Also, it stimulates you to store migrations code very close to code of your application — in the same project.</description>
    </item>
    
    <item>
      <title>Kotlin Static Analysis Tools</title>
      <link>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/kotlin-static-analysis-tools/</guid>
      <description>Kotlin did an amazing job saving and including into its scope most of all valuable Java libraries, frameworks, and tools. But there is one type of tool that can&amp;rsquo;t be easily imported and reused — static code analyzers. Java developers have implemented a lot of tools for code analysis, therefore, if you have worked with Java you might be familiar with some of the following projects: PMD, checkstyle, findbugs, spotbugs, etc.</description>
    </item>
    
    <item>
      <title>Number of Categories for K-Means: Elbow and Silhouette Methods</title>
      <link>http://smyachenkov.com/posts/number-of-categories-for-k-means/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/number-of-categories-for-k-means/</guid>
      <description>K-Means is a very common and powerful clusterization algorithm widely used in an unsupervised machine learning tasks for dividing data into categories. The only decision you have to make is the number of clusters you want your data to be divided into — k number.
Sometimes you already know how many categories you need to have. It depends a lot on the type of your problem, your data, and the problems you are solving.</description>
    </item>
    
    <item>
      <title>Categorizing Instagram Tags with K-Means</title>
      <link>http://smyachenkov.com/posts/categorizing-instagram-tags-with-k-means/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0300</pubDate>
      
      <guid>http://smyachenkov.com/posts/categorizing-instagram-tags-with-k-means/</guid>
      <description>Over the last couple of years Instagram, Facebook and many other social media have gotten rid of the chronological order in their post feed. While frustrating at first, this decision encouraged one part of social media that I like most of all: your content can be seen, discovered and rated not only by your friends and followers, but also by many other new people. To make your content discoverable you can use features such as hashtags, geolocations, tagging other people and so on.</description>
    </item>
    
  </channel>
</rss>